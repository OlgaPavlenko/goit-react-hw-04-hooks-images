{"version":3,"sources":["Searchbar/Searchbar.js","Modal/Modal.js","Loader/Loader.js","Button/Button.js","services/gallery-api.js","ImageGalleryItem/ImageGalleryItem.js","ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","searchQuery","changeInput","evt","setState","target","value","handleSubmit","preventDefault","trim","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","Modal","checkEvent","key","currentTarget","toggleModal","status","window","addEventListener","removeEventListener","src","alt","onClick","Spinner","color","height","width","timeout","Button","API_KEY","page","a","axios","get","then","response","data","Promise","reject","Error","ImageGalleryItem","image","webformatURL","tags","data-imageurl","largeImageURL","Status","ImageGallery","images","totalHits","error","emptyNotify","showButton","onButtonMoreClick","prevState","checkButtonAndNotify","length","dataset","imageurl","prevProps","searchImages","fetchImage","hits","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","finally","toast","message","toastId","info","map","id","App","showPopup","targetImage","autoClose","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.6cd2e46d.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Searchbar extends Component {\n  state = {\n    searchQuery: \"\",\n  };\n\n  changeInput = (evt) => {\n    this.setState({ searchQuery: evt.target.value });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    if (this.state.searchQuery.trim() !== \"\") {\n      this.props.onSubmit(this.state.searchQuery);\n    }\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Поиск изображений и фото\"\n            value={searchQuery}\n            onChange={this.changeInput}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.checkEvent);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.checkEvent);\n  }\n\n  checkEvent = (evt) => {\n    if (evt.key === \"Escape\" || evt.target === evt.currentTarget) {\n      this.props.toggleModal({ status: false });\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return (\n      <div className=\"Overlay\" onClick={this.checkEvent}>\n        <div className=\"Modal\">\n          <img src={src} alt={alt} />\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  src: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport Loader from \"react-loader-spinner\";\n\nexport default class Spinner extends Component {\n  render() {\n    return (\n      <Loader\n        className=\"loader\"\n        type=\"Circles\"\n        color=\"#3f51b5\"\n        height={80}\n        width={80}\n        timeout={3000} //3 secs\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Button({ onClick }) {\n  return (\n    <div className=\"Button_container\">\n      <button\n        className=\"Button Button_loadmore\"\n        type=\"button\"\n        onClick={onClick}\n      >\n        Load more\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import axios from \"axios\";\n\nconst API_KEY = \"19023232-35be833f55f428d8b0eb36710\";\n\nexport default async function fetchImage(searchQuery, page) {\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=15`\n    )\n    .then((response) => {\n      if (response.status === 200) {\n        return response.data;\n      }\n\n      return Promise.reject(new Error(`Images are not found.`));\n    });\n}\n","import PropTypes from \"prop-types\";\n\nexport default function ImageGalleryItem({ image }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={image.webformatURL}\n        alt={image.tags}\n        data-imageurl={image.largeImageURL}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.object.isRequired,\n};\n","import React, { Component } from \"react\";\nimport Spinner from \"../Loader/Loader\";\nimport Button from \"../Button/Button\";\nimport fetchImage from \"../services/gallery-api\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n};\n\nexport default class ImageGallery extends Component {\n  state = {\n    images: [],\n    totalHits: 0,\n    page: 1,\n    error: null,\n    emptyNotify: false,\n    showButton: false,\n    status: Status.IDLE,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.searchQuery !== this.props.searchQuery) {\n      this.setState({ status: Status.PENDING, page: 1 });\n      this.searchImages();\n      return;\n    }\n\n    if (prevState.page !== this.state.page) {\n      this.searchImages();\n      return;\n    }\n  }\n\n  onButtonMoreClick = () => {\n    this.setState((prevState) => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  checkButtonAndNotify = () => {\n    const { totalHits, images } = this.state;\n\n    if (totalHits > images.length) {\n      this.setState({ showButton: true });\n    } else {\n      this.setState({ showButton: false });\n    }\n\n    if (!totalHits) {\n      this.setState({ emptyNotify: true });\n    } else {\n      this.setState({ emptyNotify: false });\n    }\n  };\n\n  searchImages() {\n    const { page } = this.state;\n    const { searchQuery } = this.props;\n\n    fetchImage(searchQuery, page)\n      .then((data) => {\n        if (page === 1) {\n          this.setState({\n            totalHits: data.totalHits,\n            images: data.hits,\n            status: Status.RESOLVED,\n          });\n        } else {\n          this.setState((prevState) => ({\n            images: [...prevState.images, ...data.hits],\n            status: Status.RESOLVED,\n          }));\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n        this.checkButtonAndNotify();\n      })\n      .catch((error) => this.setState({ error, status: Status.REJECTED }))\n      .finally(() => this.setState({ status: Status.IDLE }));\n  }\n\n  checkEvent = (evt) => {\n    const { toggleModal } = this.props;\n    if (evt.target !== evt.currentTarget) {\n      toggleModal({\n        status: true,\n        src: evt.target.dataset.imageurl,\n        alt: evt.target.alt,\n      });\n    }\n  };\n\n  render() {\n    const { images, error, status, totalHits } = this.state;\n\n    if (status === Status.PENDING) {\n      return <Spinner />;\n    }\n\n    if (status === Status.REJECTED) {\n      toast.error(error.message, { toastId: \"id\" });\n    }\n\n    if (status === Status.RESOLVED || status === Status.IDLE) {\n      if (!images.length && status !== Status.IDLE) {\n        toast.info(\"Нет информации по Вашему запросу\", { toastId: \"newId\" });\n      }\n\n      return (\n        <>\n          if(images){}\n          <ul className=\"ImageGallery\" onClick={this.checkEvent}>\n            {images.map((image) => (\n              <ImageGalleryItem image={image} key={image.id} />\n            ))}\n          </ul>\n          {images.length && images.length < totalHits && (\n            <Button onClick={this.onButtonMoreClick} />\n          )}\n        </>\n      );\n    }\n\n    return <></>;\n  }\n}\n\nImageGallery.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport Modal from \"./Modal/Modal\";\nimport { ToastContainer } from \"react-toastify\";\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\n\nexport default class App extends Component {\n  state = {\n    searchQuery: \"\",\n    showPopup: false,\n    targetImage: null,\n  };\n\n  onSubmit = (value) => {\n    this.setState({ searchQuery: value });\n  };\n\n  toggleModal = ({ status, src, alt }) => {\n    if (status) {\n      this.setState({\n        targetImage: { src, alt },\n        showPopup: true,\n      });\n    } else {\n      this.setState({\n        targetImage: null,\n        showPopup: false,\n      });\n    }\n  };\n\n  render() {\n    const { showPopup, targetImage, searchQuery } = this.state;\n\n    return (\n      <div>\n        <ToastContainer autoClose={3000} />\n        <Searchbar onSubmit={this.onSubmit} />\n        <ImageGallery\n          searchQuery={searchQuery}\n          toggleModal={this.toggleModal}\n        />\n        {showPopup && (\n          <Modal\n            src={targetImage.src}\n            alt={targetImage.alt}\n            toggleModal={this.toggleModal}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}
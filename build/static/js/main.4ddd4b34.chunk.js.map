{"version":3,"sources":["Searchbar/Searchbar.js","Modal/Modal.js","Loader/Loader.js","Button/Button.js","services/gallery-api.js","ImageGalleryItem/ImageGalleryItem.js","ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","evt","preventDefault","trim","type","autoComplete","autoFocus","placeholder","value","onChange","target","Modal","src","alt","toggleModal","useEffect","window","addEventListener","checkEvent","removeEventListener","key","currentTarget","status","onClick","Spinner","color","height","width","timeout","Component","Button","API_KEY","page","a","axios","get","then","response","data","Promise","reject","Error","ImageGalleryItem","image","webformatURL","tags","data-imageurl","largeImageURL","Status","ImageGallery","images","setImages","totalHits","setTotalHits","setPage","error","setError","showButton","setShowButton","setStatus","searchImages","checkButtonAndNotify","length","fetchImage","hits","state","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","finally","toast","message","toastId","info","dataset","imageurl","map","id","App","showPopup","setShowPopup","targetImage","seTtargetImage","autoClose","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.4ddd4b34.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const changeInput = (evt) => {\n    setSearchQuery(evt.target.value);\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    if (searchQuery.trim() !== \"\") {\n      onSubmit(searchQuery);\n    }\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Поиск изображений и фото\"\n          value={searchQuery}\n          onChange={changeInput}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Modal({ src, alt, toggleModal }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", checkEvent);\n    return () => {\n      window.removeEventListener(\"keydown\", checkEvent);\n    };\n  });\n\n  const checkEvent = (evt) => {\n    if (evt.key === \"Escape\" || evt.target === evt.currentTarget) {\n      toggleModal({ status: false });\n    }\n  };\n\n  return (\n    <div className=\"Overlay\" onClick={checkEvent}>\n      <div className=\"Modal\">\n        <img src={src} alt={alt} />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  src: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport Loader from \"react-loader-spinner\";\n\nexport default class Spinner extends Component {\n  render() {\n    return (\n      <Loader\n        className=\"loader\"\n        type=\"Circles\"\n        color=\"#3f51b5\"\n        height={80}\n        width={80}\n        timeout={3000} //3 secs\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Button({ onClick }) {\n  return (\n    <div className=\"Button_container\">\n      <button\n        className=\"Button Button_loadmore\"\n        type=\"button\"\n        onClick={onClick}\n      >\n        Load more\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import axios from \"axios\";\n\nconst API_KEY = \"19023232-35be833f55f428d8b0eb36710\";\n\nexport default async function fetchImage(searchQuery, page) {\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=15`\n    )\n    .then((response) => {\n      if (response.status === 200) {\n        return response.data;\n      }\n\n      return Promise.reject(new Error(`Images are not found.`));\n    });\n}\n","import PropTypes from \"prop-types\";\n\nexport default function ImageGalleryItem({ image }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={image.webformatURL}\n        alt={image.tags}\n        data-imageurl={image.largeImageURL}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.object.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport Spinner from \"../Loader/Loader\";\nimport Button from \"../Button/Button\";\nimport fetchImage from \"../services/gallery-api\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n};\n\nexport default function ImageGallery({ searchQuery, toggleModal }) {\n  const [images, setImages] = useState([]);\n  const [totalHits, setTotalHits] = useState(0);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [showButton, setShowButton] = useState(false);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    setStatus(Status.PENDING);\n    setImages([]);\n    searchImages();\n  }, [searchQuery]);\n\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n    setStatus(Status.PENDING);\n\n    searchImages();\n  }, [page]);\n\n  useEffect(() => {\n    checkButtonAndNotify();\n  }, [images.length]);\n\n  const checkButtonAndNotify = () => {\n    if (totalHits > images.length) {\n      setShowButton(true);\n    } else {\n      setShowButton(false);\n    }\n  };\n\n  function searchImages() {\n    fetchImage(searchQuery, page)\n      .then(({ totalHits, hits }) => {\n        if (page === 1) {\n          setTotalHits(totalHits);\n          setImages(hits);\n          setStatus(Status.RESOLVED);\n        } else {\n          setImages((state) => [...state, ...hits]);\n          setStatus(Status.RESOLVED);\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      })\n      .catch((error) => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      })\n      .finally(() => {\n        setStatus(Status.IDLE);\n      });\n  }\n\n  const checkEvent = (evt) => {\n    if (evt.target !== evt.currentTarget) {\n      toggleModal({\n        status: true,\n        src: evt.target.dataset.imageurl,\n        alt: evt.target.alt,\n      });\n    }\n  };\n\n  if (status === Status.PENDING) {\n    return <Spinner />;\n  }\n\n  if (status === Status.REJECTED) {\n    toast.error(error.message, { toastId: \"id\" });\n  }\n\n  if (status === Status.RESOLVED || status === Status.IDLE) {\n    if (!images.length && status !== Status.IDLE) {\n      toast.info(\"Нет информации по Вашему запросу\", { toastId: \"newId\" });\n    }\n\n    return (\n      <>\n        <ul className=\"ImageGallery\" onClick={checkEvent}>\n          {images.map((image) => (\n            <ImageGalleryItem image={image} key={image.id} />\n          ))}\n        </ul>\n        {showButton && <Button onClick={() => setPage((state) => state + 1)} />}\n      </>\n    );\n  }\n\n  return <></>;\n}\n\nImageGallery.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string.isRequired,\n};\n","import React, { useState } from \"react\";\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport Modal from \"./Modal/Modal\";\nimport { ToastContainer } from \"react-toastify\";\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n  const [targetImage, seTtargetImage] = useState(null);\n\n  const onSubmit = (searchQuery) => {\n    setSearchQuery(searchQuery);\n  };\n\n  const toggleModal = ({ status, src, alt }) => {\n    if (status) {\n      seTtargetImage({ src, alt });\n      setShowPopup(true);\n    } else {\n      seTtargetImage(null);\n      setShowPopup(false);\n    }\n  };\n\n  return (\n    <div>\n      <ToastContainer autoClose={3000} />\n      <Searchbar onSubmit={onSubmit} />\n      <ImageGallery searchQuery={searchQuery} toggleModal={toggleModal} />\n      {showPopup && (\n        <Modal\n          src={targetImage.src}\n          alt={targetImage.alt}\n          toggleModal={toggleModal}\n        />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}